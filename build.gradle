plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.minigame'
version = '0.0.1-SNAPSHOT'

java { sourceCompatibility = '17' }

configurations {
    compileOnly { extendsFrom annotationProcessor }

    // ★ 개발 전용 의존성(실행 JAR/도커 이미지에 포함되지 않게)
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories { mavenCentral() }

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // ★ H2는 로컬 개발 전용으로만
    developmentOnly 'com.h2database:h2'
    // 또는 testRuntimeOnly 'com.h2database:h2'

    // ★ 사용 DB 드라이버만 런타임 포함 (MySQL만 쓰면 이것만 남기기)
    runtimeOnly 'com.mysql:mysql-connector-j'
    // runtimeOnly 'org.postgresql:postgresql' // PostgreSQL 안 쓰면 제거

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
}

tasks.named('test') { useJUnitPlatform() }
